jobs:
  push_to_registry:
    env:
      IMAGE_TAG: latest
      REGION: us-east-1
      REGISTRY: 808326389482.dkr.ecr.us-east-1.amazonaws.com
    if: github.event.pull_request.merged == true
    name: Push Docker image to ECR Public
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Check out the repo
      uses: actions/checkout@v3
    - continue-on-error: true
      name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@master
      with:
        aws-region: us-east-1
        role-to-assume: arn:aws:iam::808326389482:role/automation
    - continue-on-error: true
      id: login-ecr-public
      name: Login to Amazon ECR Public
      uses: aws-actions/amazon-ecr-login@v2
      with:
        registry-type: public
    - continue-on-error: true
      env:
        REPOSITORY: ruby
      if: contains(github.event.pull_request.labels.*.name, 'Ruby')
      name: Build, tag, and push docker image to Amazon ECR Public - Ruby
      run: 'aws ecr get-login-password --region $REGION | docker login --username
        AWS --password-stdin $REGISTRY

        docker build -t $REPOSITORY -f ./$REPOSITORY/Dockerfile ./$REPOSITORY

        docker tag $REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:$IMAGE_TAG

        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

        '
    - continue-on-error: true
      env:
        REPOSITORY: python
      if: contains(github.event.pull_request.labels.*.name, 'Python')
      name: Build, tag, and push docker image to Amazon ECR Public - Python
      run: 'aws ecr get-login-password --region $REGION | docker login --username
        AWS --password-stdin $REGISTRY

        docker build -t $REPOSITORY -f ./$REPOSITORY/Dockerfile ./$REPOSITORY

        docker tag $REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:$IMAGE_TAG

        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

        '
    - continue-on-error: true
      env:
        REPOSITORY: javascriptv3
      if: contains(github.event.pull_request.labels.*.name, 'Javascript-v3')
      name: Build, tag, and push docker image to Amazon ECR Public - JavaScript
      run: 'aws ecr get-login-password --region $REGION | docker login --username
        AWS --password-stdin $REGISTRY

        docker build -t $REPOSITORY -f ./$REPOSITORY/Dockerfile .

        docker tag $REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:$IMAGE_TAG

        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

        '
    - continue-on-error: true
      env:
        REPOSITORY: rustv1
      if: contains(github.event.pull_request.labels.*.name, 'Rust')
      name: Build, tag, and push docker image to Amazon ECR Public - Rust
      run: 'aws ecr get-login-password --region $REGION | docker login --username
        AWS --password-stdin $REGISTRY

        docker build -t $REPOSITORY -f ./$REPOSITORY/Dockerfile ./$REPOSITORY

        docker tag $REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:$IMAGE_TAG

        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

        '
    - continue-on-error: true
      env:
        REPOSITORY: gov2
      if: contains(github.event.pull_request.labels.*.name, 'Go-v2')
      name: Build, tag, and push docker image to Amazon ECR Public - GoLang
      run: 'aws ecr get-login-password --region $REGION | docker login --username
        AWS --password-stdin $REGISTRY

        docker build -t $REPOSITORY -f ./$REPOSITORY/Dockerfile ./$REPOSITORY

        docker tag $REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:$IMAGE_TAG

        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

        '
    - continue-on-error: true
      env:
        REPOSITORY: cpp
      if: contains(github.event.pull_request.labels.*.name, 'C++')
      name: Build, tag, and push docker image to Amazon ECR Public - C++
      run: 'aws ecr get-login-password --region $REGION | docker login --username
        AWS --password-stdin $REGISTRY

        docker build -t $REPOSITORY -f ./$REPOSITORY/Dockerfile ./$REPOSITORY

        docker tag $REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:$IMAGE_TAG

        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

        '
    - continue-on-error: true
      env:
        REPOSITORY: dotnetv3
      if: contains(github.event.pull_request.labels.*.name, 'DotNet-v3')
      name: Build, tag, and push docker image to Amazon ECR Public - .NET v3
      run: 'aws ecr get-login-password --region $REGION | docker login --username
        AWS --password-stdin $REGISTRY

        docker build -t $REPOSITORY -f ./$REPOSITORY/Dockerfile ./$REPOSITORY

        docker tag $REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:$IMAGE_TAG

        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

        '
    - continue-on-error: true
      env:
        REPOSITORY: javav2
      if: contains(github.event.pull_request.labels.*.name, 'Java-v2')
      name: Build, tag, and push docker image to Amazon ECR Public - JavaV2
      run: 'aws ecr get-login-password --region $REGION | docker login --username
        AWS --password-stdin $REGISTRY

        docker build -t $REPOSITORY -f ./$REPOSITORY/Dockerfile ./$REPOSITORY

        docker tag $REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:$IMAGE_TAG

        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

        '
    - continue-on-error: true
      env:
        REPOSITORY: kotlin
      if: contains(github.event.pull_request.labels.*.name, 'Kotlin')
      name: Build, tag, and push docker image to Amazon ECR Public - Kotlin
      run: 'aws ecr get-login-password --region $REGION | docker login --username
        AWS --password-stdin $REGISTRY

        docker build -t $REPOSITORY -f ./$REPOSITORY/Dockerfile ./$REPOSITORY

        docker tag $REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:$IMAGE_TAG

        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

        '
    - continue-on-error: true
      env:
        REPOSITORY: php
      if: contains(github.event.pull_request.labels.*.name, 'PHP')
      name: Build, tag, and push docker image to Amazon ECR Public - PHP
      run: 'aws ecr get-login-password --region $REGION | docker login --username
        AWS --password-stdin $REGISTRY

        docker build -t $REPOSITORY -f ./$REPOSITORY/Dockerfile ./$REPOSITORY

        docker tag $REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:$IMAGE_TAG

        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

        '
    - continue-on-error: true
      env:
        REPOSITORY: swift
      if: contains(github.event.pull_request.labels.*.name, 'Swift')
      name: Build, tag, and push docker image to Amazon ECR Public - Swift
      run: 'aws ecr get-login-password --region $REGION | docker login --username
        AWS --password-stdin $REGISTRY

        docker build -t $REPOSITORY -f ./$REPOSITORY/Dockerfile ./$REPOSITORY

        docker tag $REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:$IMAGE_TAG

        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

        '
name: Docker Image CI
on:
  repository_dispatch:
    types: trigger-ga___docker-push.yml
permissions:
  contents: read
  id-token: write
  packages: write
